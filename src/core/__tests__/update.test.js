import{update,extractCss}from"../update";import{getSheet}from"../get-sheet";describe("update",(()=>{it("regression",(()=>{const e={data:""};update("css",e),expect(e.data).toEqual("css")})),it("regression: duplicate",(()=>{const e={data:""};update("css",e),update("foo",e),update("css",e),expect(e.data).toEqual("cssfoo")})),it("regression: extract and flush",(()=>{update("filled",getSheet()),expect(extractCss()).toEqual(" filled"),expect(extractCss()).toEqual("")})),it("regression: extract and flush without DOM",(()=>{const e=global.self;delete global.self,update("filled",getSheet()),expect(extractCss()).toEqual("filled"),expect(extractCss()).toEqual(""),global.self=e})),it("regression: extract and flush from custom target",(()=>{const e=document.createElement("div");update("filled",getSheet()),update("filledbody",getSheet(e)),expect(extractCss(e)).toEqual(" filledbody"),expect(extractCss(e)).toEqual("")})),it("regression: append or prepend",(()=>{extractCss(),update("end",getSheet()),update("start",getSheet(),!0),expect(extractCss()).toEqual("startend")}))}));