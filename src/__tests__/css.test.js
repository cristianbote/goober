import{css,glob,keyframes}from"../css";import{hash}from"../core/hash";import{compile}from"../core/compile";import{getSheet}from"../core/get-sheet";jest.mock("../core/hash",(()=>({hash:jest.fn().mockReturnValue("hash()")}))),jest.mock("../core/compile",(()=>({compile:jest.fn().mockReturnValue("compile()")}))),jest.mock("../core/get-sheet",(()=>({getSheet:jest.fn().mockReturnValue("getSheet()")}))),describe("css",(()=>{beforeEach((()=>{hash.mockClear(),compile.mockClear(),getSheet.mockClear()})),it("type",(()=>{expect(typeof css).toEqual("function")})),it("args: tagged",(()=>{const e=css`base${1}`;expect(compile).toBeCalledWith(["base",""],[1],void 0),expect(getSheet).toBeCalled(),expect(hash).toBeCalledWith("compile()","getSheet()",void 0,void 0,void 0),expect(e).toEqual("hash()")})),it("args: object",(()=>{const e=css({foo:1});expect(hash).toBeCalledWith({foo:1},"getSheet()",void 0,void 0,void 0),expect(compile).not.toBeCalled(),expect(getSheet).toBeCalled(),expect(e).toEqual("hash()")})),it("args: array",(()=>{const e=jest.fn().mockReturnValue({backgroundColor:"gold"}),t=css([{foo:1},{baz:2},{opacity:0,color:"red"},e]);expect(e).toHaveBeenCalled(),expect(hash).toBeCalledWith({foo:1,baz:2,opacity:0,color:"red",backgroundColor:"gold"},"getSheet()",void 0,void 0,void 0),expect(compile).not.toBeCalled(),expect(getSheet).toBeCalled(),expect(t).toEqual("hash()")})),it("args: function",(()=>{const e={foo:"foo"},t=css.call({p:e},(e=>({foo:e.foo})));expect(hash).toBeCalledWith(e,"getSheet()",void 0,void 0,void 0),expect(compile).not.toBeCalled(),expect(getSheet).toBeCalled(),expect(t).toEqual("hash()")})),it("bind",(()=>{const e={},t=css.bind({target:"",p:e,g:!0})`foo: 1`;expect(hash).toBeCalledWith("compile()","getSheet()",!0,void 0,void 0),expect(compile).toBeCalledWith(["foo: 1"],[],e),expect(getSheet).toBeCalledWith(""),expect(t).toEqual("hash()")}))})),describe("glob",(()=>{it("type",(()=>{expect(typeof glob).toEqual("function")})),it("args: g",(()=>{glob`a:b`,expect(hash).toBeCalledWith("compile()","getSheet()",1,void 0,void 0)}))})),describe("keyframes",(()=>{it("type",(()=>{expect(typeof keyframes).toEqual("function")})),it("args: k",(()=>{keyframes`a:b`,expect(hash).toBeCalledWith("compile()","getSheet()",void 0,void 0,1)}))}));