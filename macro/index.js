const{createMacro:createMacro,MacroError:MacroError}=require("babel-plugin-macros"),{addNamed:addNamed}=require("@babel/helper-module-imports");function gooberMacro({references:e,babel:r,state:o}){const a=o.file.path;if(e.default)throw new MacroError("goober.macro does not support default import");Object.keys(e).forEach((r=>{const o=addNamed(a,r,"goober");e[r].forEach((e=>{e.node.name=o.name}))}));const t=r.types;(e.styled||[]).forEach((e=>{if("MemberExpression"===e.parentPath.type){const r=e.parentPath.node,o=r.object.name;let a=r.property.name;/[A-Z]/.test(a)&&(a=a.replace(/[A-Z]/g,"-$&").toLowerCase()),e.parentPath.replaceWith(t.callExpression(t.identifier(o),[t.stringLiteral(a)]))}}))}module.exports=createMacro(gooberMacro);